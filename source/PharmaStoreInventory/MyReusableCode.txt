====================================================================================================================
||||||||||||||||||||||||||||||||||||||||||||Xmlns|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
    xmlns:template="clr-namespace:PharmaStoreInventory.Views.Templates"
    xmlns:vm="clr-namespace:PharmaStoreInventory.ViewModels"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:help="clr-namespace:PharmaStoreInventory.Helpers"
    xmlns:res="clr-namespace:PharmaStoreInventory.Languages"
    x:Name="ThisPage"
    xmlns:icon="clr-namespace:DrasatHealthMobile.Helpers"
    NavigationPage.HasNavigationBar="False"
    xmlns:trigger="clr-namespace:PharmaStoreInventory.Triggers"
====================================================================================================================
|||||||||||||||||||||||||||||||||||||||||||Stopwatch||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
var stopWatch = new Stopwatch();
stopWatch.Start();
Console.WriteLine( stopWatch.Elapsed.Microseconds.ToString());
// do something
stopWatch.Stop();
Console.WriteLine( stopWatch.Elapsed.Microseconds.ToString());
====================================================================================================================
|||||||||||||||||||||||||||||||||||||||||||ActivityIndicator||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
<ActivityIndicator
    x:Name="activityIndicator"
    Grid.Row="0"
    Grid.RowSpan="4"
    VerticalOptions="Center"
    ZIndex="1"
    IsRunning="False"
    Color="{StaticResource Primary600}" />
====================================================================================================================
|||||||||||||||||||||||||||||||||||||||||||||DataTrigger||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
<Label.Triggers>
    <DataTrigger
        TargetType="Label"
        Binding="{Binding IsSelected}"
        Value="True">
        <Setter Property="Text" Value="{x:Static icon:IconFont.CheckboxMarkedCircle}" />
        <Setter Property="TextColor" Value="{StaticResource Primary700}" />
    </DataTrigger>
</Label.Triggers>
====================================================================================================================
|||||||||||||||||||||||||||||||||||||||||||TouchBehavior||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
<Button.Behaviors>
    <toolkit:TouchBehavior
        DefaultAnimationDuration="250"
        DefaultAnimationEasing="{x:Static Easing.CubicInOut}"
        PressedOpacity="0.6"
        PressedScale="0.8" />
</Button.Behaviors>
====================================================================================================================
|||||||||||||||||||||||||||||||||||||||Binding outSide Collection|||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
<Border.GestureRecognizers>
    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type vm:???????ViewModel}}, Path=???????Command}" 
                          CommandParameter="{Binding .}" />
</Border.GestureRecognizers>
====================================================================================================================
||||||||||||||||||||||||||||||||||||||||||||BindableProperty||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
    public static readonly BindableProperty Name_Property =
    BindableProperty.Create(
        nameof(Name_),
        typeof(MyType),
        typeof(thisClaseName),
        ????, BindingMode.OneWay);

    public MyType Name_
    {
        get => (MyType)GetValue(Name_Property);
        set => SetValue(Name_Property, value);
    }
====================================================================================================================
||||||||||||||||||||||||||||||||||||||||||||||Dispatcher||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
await Dispatcher.DispatchAsync(() =>
{
    // this is Dispatcher
});
====================================================================================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
//###########*Fields*###############
#region Private Fields
#endregion

//#########*Constructor*############

//###########*Properties*###########
#region Public Properties
#endregion

//############*Commands*############
#region Commands
#endregion

//##############*API*###############
#region Fetch Data
#endregion

//#########*ExecuteMethods*#########
#region Exectue Methods
#endregion

//###########*Processors*###########
#region Processors
#endregion
====================================================================================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
====================================================================================================================
